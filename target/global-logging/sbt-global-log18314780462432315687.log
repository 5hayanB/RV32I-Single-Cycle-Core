[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 282.76978ms
[debug]       Load.loadUnit: defsScala took 0.499314ms
[debug] [Loading] Scanning directory C:\Users\Microsoft\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Microsoft\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 43.050787 ms
[debug]           Load.resolveProject(global-plugins) took 117.445475ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Microsoft\.sbt\1.0\plugins, plugins: List(<none>))) took 230.609966ms
[debug] [Loading] Done in C:\Users\Microsoft\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 317.266186ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.448ms
[debug]     Load.loadUnit(file:/C:/Users/Microsoft/.sbt/1.0/plugins/, ...) took 623.969579ms
[debug]   Load.apply: load took 1531.92398ms
[debug]   Load.apply: resolveProjects took 13.968749ms
[debug]   Load.apply: finalTransforms took 176.783096ms
[debug]   Load.apply: config.delegates took 14.36231ms
[debug]   Load.apply: Def.make(settings)... took 1312.313203ms
[debug]   Load.apply: structureIndex took 293.246006ms
[debug]   Load.apply: mkStreams took 16.070866ms
[info] loading global plugins from C:\Users\Microsoft\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 23788.314889ms
[debug]           Load.loadUnit: plugins took 315.488467ms
[debug]           Load.loadUnit: defsScala took 0.016063ms
[debug] [Loading] Scanning directory E:\MERL\Repositories\RV32I-Single-Cycle-Core\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MERL\Repositories\RV32I-Single-Cycle-Core\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.305525 ms
[debug]               Load.resolveProject(rv32i-single-cycle-core-build) took 2.252491ms
[debug]             Load.loadTransitive: finalizeProject(Project(id rv32i-single-cycle-core-build, base: E:\MERL\Repositories\RV32I-Single-Cycle-Core\project, plugins: List(<none>))) took 7.437505ms
[debug] [Loading] Done in E:\MERL\Repositories\RV32I-Single-Cycle-Core\project, returning: (rv32i-single-cycle-core-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13.153961ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.019188ms
[debug]         Load.loadUnit(file:/E:/MERL/Repositories/RV32I-Single-Cycle-Core/project/, ...) took 330.756593ms
[debug]       Load.apply: load took 337.558689ms
[debug]       Load.apply: resolveProjects took 0.191426ms
[debug]       Load.apply: finalTransforms took 76.508406ms
[debug]       Load.apply: config.delegates took 9.169711ms
[debug]       Load.apply: Def.make(settings)... took 291.375921ms
[debug]       Load.apply: structureIndex took 80.839365ms
[debug]       Load.apply: mkStreams took 0.004462ms
[info] loading project definition from E:\MERL\Repositories\RV32I-Single-Cycle-Core\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6938.184549ms
[debug]     Load.loadUnit: defsScala took 0.008924ms
[debug] [Loading] Scanning directory E:\MERL\Repositories\RV32I-Single-Cycle-Core
[debug]       Load.loadUnit: mkEval took 144.778352ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.415359 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 5.035086ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\MERL\Repositories\RV32I-Single-Cycle-Core, plugins: List(<none>))) took 10.566362ms
[debug] [Loading] Done in E:\MERL\Repositories\RV32I-Single-Cycle-Core, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 24315.865965ms
[debug]     Load.loadUnit: cleanEvalClasses took 113.830244ms
[debug]   Load.loadUnit(file:/E:/MERL/Repositories/RV32I-Single-Cycle-Core/, ...) took 31369.887385ms
[debug] Load.apply: load took 31375.634629ms
[debug] Load.apply: resolveProjects took 0.441753ms
[debug] Load.apply: finalTransforms took 18.156027ms
[debug] Load.apply: config.delegates took 0.726884ms
[debug] Load.apply: Def.make(settings)... took 234.998041ms
[debug] Load.apply: structureIndex took 65.615415ms
[debug] Load.apply: mkStreams took 0.004908ms
[info] set current project to RISC-V Single Cycle Core (in build file:/E:/MERL/Repositories/RV32I-Single-Cycle-Core/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-dcedc96cc825918db8f5
[debug] Writing bsp connection file
[info] started sbt server
